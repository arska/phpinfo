apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: mytemplate
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/arska/phpinfo
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.0
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: b916cb04436635a4
      type: Generic
    - github:
        secret: efcb169137a4424f
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/playground/${NAME}:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - image: 172.30.1.1:5000/playground/${NAME}@sha256:a2237e1785b9df4f397c0cde87e3543508917899704756f5d1021978931e4f9c
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src/data
            name: volume-ytg17
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-ytg17
          persistentVolumeClaim:
            claimName: ${NAME}-storage
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
          namespace: playground
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    host: ${NAME}-playground.127.0.0.1.nip.io
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-08T16:21:34Z
        status: "True"
        type: Admitted
      host: ${NAME}-playground.127.0.0.1.nip.io
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    name: ${NAME}-storage
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: mytemplate
